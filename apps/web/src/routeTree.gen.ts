/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as TasksIndexRouteImport } from './routes/tasks/index'
import { Route as TasksSearchRouteImport } from './routes/tasks/search'
import { Route as TasksItemTaskIdRouteImport } from './routes/tasks/item/$taskId'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIndexRoute = TasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksSearchRoute = TasksSearchRouteImport.update({
  id: '/tasks/search',
  path: '/tasks/search',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksItemTaskIdRoute = TasksItemTaskIdRouteImport.update({
  id: '/tasks/item/$taskId',
  path: '/tasks/item/$taskId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/tasks/search': typeof TasksSearchRoute
  '/tasks': typeof TasksIndexRoute
  '/tasks/item/$taskId': typeof TasksItemTaskIdRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/tasks/search': typeof TasksSearchRoute
  '/tasks': typeof TasksIndexRoute
  '/tasks/item/$taskId': typeof TasksItemTaskIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/tasks/search': typeof TasksSearchRoute
  '/tasks/': typeof TasksIndexRoute
  '/tasks/item/$taskId': typeof TasksItemTaskIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/register'
    | '/tasks/search'
    | '/tasks'
    | '/tasks/item/$taskId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/tasks/search'
    | '/tasks'
    | '/tasks/item/$taskId'
  id:
    | '__root__'
    | '/login'
    | '/register'
    | '/tasks/search'
    | '/tasks/'
    | '/tasks/item/$taskId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  TasksSearchRoute: typeof TasksSearchRoute
  TasksIndexRoute: typeof TasksIndexRoute
  TasksItemTaskIdRoute: typeof TasksItemTaskIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/search': {
      id: '/tasks/search'
      path: '/tasks/search'
      fullPath: '/tasks/search'
      preLoaderRoute: typeof TasksSearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/item/$taskId': {
      id: '/tasks/item/$taskId'
      path: '/tasks/item/$taskId'
      fullPath: '/tasks/item/$taskId'
      preLoaderRoute: typeof TasksItemTaskIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  TasksSearchRoute: TasksSearchRoute,
  TasksIndexRoute: TasksIndexRoute,
  TasksItemTaskIdRoute: TasksItemTaskIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
